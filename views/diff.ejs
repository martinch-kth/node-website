<!DOCTYPE html>
<html lang="en">
<head>
    <% include partials/script %>


    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="stylesheets/bootstrap.min.css">

    <!-- CSS -->
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/diff2html/bundles/css/diff2html.min.css" />

    <link rel="stylesheet" href="stylesheets/semantic.css">
    <link rel="stylesheet" href="stylesheets/text_search_style.css">

    <% include partials/head %>
</head>
<body>


<div class="row">
    <div class="column">
        <br id="main-container" style="padding-left: 50px">
        <% include partials/menu %>
    </div>
</div>

<div class="ui two column grid">
    <div class="row">
        <div class="column">
        <div style="width: 80%">
        <select id="filedropdown" class="ui dropdown large text filedrop fluid">
        </select>
        </div>
        </div>

        <div class="column">
        <div style="width: 80%">
        <select id="diff_dropdown" class="ui dropdown large text diffdrop fluid">
        </select>
        </div>
        </div>
    </div>
</div>


<div class="ui one column grid">
    <div class="row">
        <div class="column"></div>
        <div class="column"><div style="width:95%" id="display3"></div></div>
        <div class="column"></div>
    </div>
</div>





<script>

    /*  Tog bort Search module.. ett annat att söka i texten.. sätt tillbaka om det behövs sen..sparar ifall att..

    <div class="row">
     <div class="app" data-finder-wrapper data-finder-scroll-offset="175">
      <button class="finder-activator" data-finder-activator>Search Module</button>
      <div class="content" data-finder-content>
         <div id="status"></div>
      </div>
     </div>
    </div>

     */

    allfiles = JSON.parse('<%- JSON.stringify(filenames) %>');

    // TODO: removed "public/data" with slice()

    values = []
    var i;

    for (i = 0; i < allfiles.length; i++) {

        if (i===0)
        {
            dropdown_allfiles = {name : allfiles[i].slice(12, allfiles[i].length) ,value: [i], selected : true}
        }
        else
        {
            dropdown_allfiles = {name : allfiles[i].slice(12, allfiles[i].length) ,value: [i]}
        }
        values.push(dropdown_allfiles)
    }

    $('.ui.dropdown.filedrop')
        .dropdown({
            values
        });
    $('.ui.dropdown.diffdrop')
        .dropdown({
            values
        });


    $('.ui.dropdown.filedrop')
        .dropdown({

            // Måste få flera värden från multi select...
            // Här finn en lösning: https://stackoverflow.com/questions/40590329/cant-get-values-from-semanticui-multi-dropdown
            // man måste ha någon observer som kollar varje gång något väljs..

            onChange: function(value, text, $selectedItem) {

                // visa diff nu..

                var return_first;
                var return_second;

                function callback(response) {
                    return_first = response;
                    //use return_first variable here
                }

                function callback_second(response) {
                    return_second = response;
                    //use return_first AND return_second variable here
                    createDiff(JSON.stringify(return_first, null, 1),JSON.stringify(return_second, null, 1))
                }


                // set URL different...NOT static...get url used right now..
                $.ajax({
                    type: 'GET',
                    url: 'http://localhost:3000/data/'+ text,
                    'success': function(data){
                        callback(data);

                        // få vad första dropdown har för värde...
                        // alert($( "#filedropdown").val())

                        var second_dropdown = $('#diff_dropdown').dropdown('get text') // + " : " + $('.ui.dropdown').dropdown('get value') );

                        $.ajax({
                            type: 'GET',
                            url: 'http://localhost:3000/data/' + second_dropdown,
                            'success': function(data){
                                callback_second(data);
                            },
                            error: function(xhr, status, err) {
                                console.log(xhr.responseText);
                            }
                        });
                    },
                    error: function(xhr, status, err) {
                        console.log(xhr.responseText);
                    }
                });
            }
        });

    // sätt den först för att rensa värden.. blir fel med CSS eller nått sen..
    $('#diff_dropdown').dropdown('clear'); // this will also remove css..

    // lösning kanske...
    // https://stackoverflow.com/questions/46994947/semantic-overriding-my-dropdown-menu-making-it-big


    $('.ui.dropdown.diffdrop')
        .dropdown({

            onChange: function(value, text, $selectedItem) {

                // visa diff nu..

                var return_first;
                var return_second;

                function callback(response) {
                    return_first = response;
                    //use return_first variable here
                }

                function callback_second(response) {
                    return_second = response;
                    //use return_first AND return_second variable here
                    createDiff(JSON.stringify(return_first, null, 1),JSON.stringify(return_second, null, 1))
                }


                // set URL different...NOT static...get url used right now..
                $.ajax({
                    type: 'GET',
                    url: 'http://localhost:3000/data/'+ text,
                    'success': function(data){
                        callback(data);

                        // få vad första dropdown har för värde...
                       // alert($( "#filedropdown").val())

                        var first_dropdown = $('#filedropdown').dropdown('get text') // + " : " + $('.ui.dropdown').dropdown('get value') );

                        $.ajax({
                            type: 'GET',
                            url: 'http://localhost:3000/data/' + first_dropdown,
                            'success': function(data){
                                callback_second(data);
                            },
                            error: function(xhr, status, err) {
                                console.log(xhr.responseText);
                            }
                        });
                    },
                    error: function(xhr, status, err) {
                        console.log(xhr.responseText);
                    }
                });
            }
        });


    function createDiff(one, other){

        // rubrik                kan va vad som helst...
        var diff = JsDiff.createPatch('fileName', one, other, 'oldHeader', 'newHeader');
        //var diff2htmlUi = new Diff2HtmlUI({ diff: diff });

        // anvädn js2html
        const targetElement = document.getElementById('display3');              // lines  ..stod det innan...
        const configuration = { inputFormat: 'json', drawFileList: true, matching: 'none', highlight: true,  outputFormat: 'side-by-side' };
        const diff2htmlUi = new Diff2HtmlUI(targetElement, diff, configuration);
        diff2htmlUi.draw();
        diff2htmlUi.highlightCode();
    }

</script>

</body>
</html>
